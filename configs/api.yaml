# Sovereign Eye API Server Configuration
server:
  port: 8080
  host: "0.0.0.0"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  max_request_size: 10485760  # 10MB
  tls:
    enabled: false
    cert_file: "/etc/sovereign/tls/cert.pem"
    key_file: "/etc/sovereign/tls/key.pem"
    ca_file: "/etc/sovereign/tls/ca.pem"

log:
  level: info
  format: json
  output: stdout
  file:
    enabled: true
    path: "/var/log/sovereign/api.log"
    max_size: 100  # MB
    max_backups: 10
    max_age: 30    # days

storage:
  postgres:
    host: localhost
    port: 5432
    database: sovereign_eye
    username: sovereign
    password: ${POSTGRES_PASSWORD}
    ssl_mode: require
    max_connections: 100
    max_idle_connections: 10
    connection_lifetime: 1h
    
  timescaledb:
    enabled: true
    compression:
      enabled: true
      after: 7d
    retention:
      enabled: true
      period: 90d
      
  elasticsearch:
    addresses:
      - "http://localhost:9200"
    username: elastic
    password: ${ELASTICSEARCH_PASSWORD}
    index_prefix: "sovereign"
    max_retries: 3
    enable_sniff: true
    
  neo4j:
    uri: "bolt://localhost:7687"
    username: neo4j
    password: ${NEO4J_PASSWORD}
    encrypted: true
    max_connection_lifetime: 1h
    max_connection_pool_size: 50
    
  redis:
    address: "localhost:6379"
    password: ${REDIS_PASSWORD}
    database: 0
    pool_size: 10
    min_idle_conns: 5
    max_retries: 3

messaging:
  type: kafka  # kafka, rabbitmq, nats
  kafka:
    brokers:
      - "localhost:9092"
    consumer_group: "sovereign-api"
    topics:
      workflows: "sovereign.workflows"
      tasks: "sovereign.tasks"
      findings: "sovereign.findings"
      events: "sovereign.events"
    producer:
      required_acks: 1
      compression: "snappy"
      max_message_bytes: 1048576
    consumer:
      offset_initial: -2  # earliest
      fetch_min: 1
      fetch_max: 10485760
      
auth:
  type: jwt  # jwt, oauth2, mtls
  jwt:
    secret: ${JWT_SECRET}
    issuer: "sovereign-eye"
    expiry: 24h
    refresh_expiry: 168h  # 7 days
  
  oauth2:
    provider: "keycloak"
    client_id: ${OAUTH_CLIENT_ID}
    client_secret: ${OAUTH_CLIENT_SECRET}
    redirect_url: "https://api.sovereign.eye/auth/callback"
    scopes:
      - "openid"
      - "profile"
      - "email"
      
  rbac:
    enabled: true
    model_file: "/etc/sovereign/rbac/model.conf"
    policy_file: "/etc/sovereign/rbac/policy.csv"
    
  session:
    store: redis
    cookie_name: "sovereign_session"
    secure: true
    http_only: true
    same_site: "strict"
    max_age: 86400  # 24 hours

vault:
  address: "http://localhost:8200"
  token: ${VAULT_TOKEN}
  namespace: "sovereign"
  transit:
    key_name: "sovereign-encryption"
  secrets:
    mount_path: "secret"
    kv_version: 2

rate_limiting:
  enabled: true
  store: redis
  global:
    requests_per_second: 1000
    burst: 2000
  per_ip:
    requests_per_second: 100
    burst: 200
  per_user:
    requests_per_second: 500
    burst: 1000
  excluded_ips:
    - "127.0.0.1"
    - "10.0.0.0/8"

cors:
  enabled: true
  allowed_origins:
    - "https://app.sovereign.eye"
    - "http://localhost:3000"
  allowed_methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed_headers:
    - Authorization
    - Content-Type
    - X-Request-ID
  exposed_headers:
    - X-Request-ID
    - X-RateLimit-Limit
    - X-RateLimit-Remaining
  allow_credentials: true
  max_age: 86400

metrics:
  enabled: true
  path: "/metrics"
  namespace: "sovereign_api"
  subsystem: "http"
  buckets:
    - 0.001
    - 0.005
    - 0.01
    - 0.05
    - 0.1
    - 0.5
    - 1
    - 5
    - 10

tracing:
  enabled: true
  provider: jaeger
  jaeger:
    endpoint: "http://localhost:14268/api/traces"
    service_name: "sovereign-api"
    sampler:
      type: "probabilistic"
      param: 0.1
    tags:
      environment: "production"
      version: "1.0.0"

features:
  auto_remediation:
    enabled: false
    dry_run: true
    approval_required: true
  
  attack_path_analysis:
    enabled: true
    max_depth: 10
    algorithms:
      - "dijkstra"
      - "a_star"
      - "floyd_warshall"
  
  compliance_reporting:
    enabled: true
    frameworks:
      - "nist-csf-2.0"
      - "iso-27001"
      - "cis-controls-v8"
      - "pci-dss-v4"
  
  rpki_validation:
    enabled: true
    validators:
      - "https://rpki.cloudflare.com/api/v1/validity"
      - "https://rpki-validator.ripe.net/api/v1/validity"

multi_tenancy:
  enabled: true
  isolation_level: "strict"  # strict, moderate, minimal
  resource_quotas:
    enabled: true
    default:
      max_assets: 10000
      max_scans_per_day: 100
      max_workflows: 50
      max_storage_gb: 100
      max_api_calls_per_hour: 10000